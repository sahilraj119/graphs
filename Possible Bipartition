886. Possible Bipartition

We want to split a group of n people (labeled from 1 to n) into two groups of any size. Each person may dislike some other people, and they should not go into the same group.

Given the integer n and the array dislikes where dislikes[i] = [ai, bi] indicates that the person labeled ai does not like the person labeled bi, return true if it is possible to split everyone into two groups in this way.

Example 1:

Input: n = 4, dislikes = [[1,2],[1,3],[2,4]]
Output: true
Explanation: group1 [1,4] and group2 [2,3].

CODE--->

// This is similar to bipartite graph or two coloring problem.

 bool possibleBipartition(int n, vector<vector<int>>& dislikes) {

   vector<int>g[n];
    for(auto x:dislikes){
        g[x[0]-1].push_back(x[1]-1);  //0 to n-1
        g[x[1]-1].push_back(x[0]-1);
    }
   
    vector<int>vis(n,-1);
    
    for(int i=0;i<n;i++){
        if(vis[i]==-1){ 
        if(dfs(i,-1,0,g,vis)==false)
                return false;
    }
    }
   return true;     
    
}

bool dfs(int source,int par,int color,vector<int>g[],vector<int>&vis){
    vis[source]=color;
    for(int x:g[source]){
        if(vis[x]==-1){
            if(dfs(x,source,!color,g,vis)==false)
                return false;
        }
       else 
       {
           if(x!=par && vis[x]==color)
              return false;
       }
 }
        return true;    
}
